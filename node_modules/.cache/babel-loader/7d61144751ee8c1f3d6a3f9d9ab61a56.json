{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0442\\u043E\\u043B\\u0438\\u0439\\\\desktop\\\\find-friend\\\\find-friend\\\\src\\\\pages\\\\animal-page\\\\animal-page.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getAnimal, getOrganization } from '../../api/api';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport styles from './animal-page.module.css';\n\nconst AnimalPage = props => {\n  let [animal, setAnimal] = useState();\n  let [org, setOrg] = useState({\n    id: '',\n    data: []\n  });\n  let animalID = props.match.params.id;\n  console.log('This is ID --->', props.match.params.id);\n  useEffect(() => {\n    const fetchAnimal = async () => {\n      const fetchedAnimal = await getAnimal(animalID);\n      setAnimal(fetchedAnimal.data.animal);\n      setOrg(prevState => {\n        return { ...prevState,\n          id: fetchedAnimal.data.animal.organization_id\n        };\n      });\n    };\n\n    fetchAnimal();\n  }, []);\n  useEffect(() => {\n    const getOrg = async id => {\n      let resp = await getOrganization(id);\n      setOrg(prevState => {\n        return { ...prevState,\n          data: resp.data.organization\n        };\n      });\n    };\n\n    if (org.id) {\n      getOrg(org.id);\n    }\n  }, []);\n  console.log(animal);\n  console.log(org.data); // setOrganization(org.id)\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.animalPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: styles.mainGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, animal ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, animal.photos ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, animal.photos.map(photo => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: photo.medium,\n      alt: \"animal-photo\",\n      className: styles.pagePhoto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 48\n      }\n    });\n  })) : null) : null), /*#__PURE__*/React.createElement(Grid, {\n    xs: 8,\n    className: styles.infoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, animal ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, animal.name), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.littleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, animal.age), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.littleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, animal.size), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.littleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, animal.gender)), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Spayed/neutered: \", animal.attributes.spayed_neutered ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"House trained: \", animal.attributes.house_trained ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"Special needs: \", animal.attributes.special_needs ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Breed: \", animal.breeds.primary)) : null))));\n};\n\nexport default AnimalPage;","map":{"version":3,"sources":["C:/Users/Анатолий/desktop/find-friend/find-friend/src/pages/animal-page/animal-page.component.jsx"],"names":["React","useState","useEffect","getAnimal","getOrganization","Container","Grid","Typography","styles","AnimalPage","props","animal","setAnimal","org","setOrg","id","data","animalID","match","params","console","log","fetchAnimal","fetchedAnimal","prevState","organization_id","getOrg","resp","organization","animalPage","mainGrid","photos","map","photo","medium","pagePhoto","infoContainer","name","littleBox","age","size","gender","aboutItem","attributes","spayed_neutered","house_trained","special_needs","breeds","primary"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {getAnimal, getOrganization} from '../../api/api';\r\nimport {Container, Grid, Typography} from '@material-ui/core';\r\nimport styles from './animal-page.module.css';\r\n\r\nconst AnimalPage = (props) => {\r\n    let [animal, setAnimal] = useState()\r\n    let [org, setOrg] = useState({\r\n        id: '',\r\n        data: []\r\n    })\r\n    let animalID = props.match.params.id;\r\n    console.log('This is ID --->',props.match.params.id)\r\n    useEffect(() => {\r\n        const fetchAnimal = async () => {\r\n            const fetchedAnimal = await getAnimal(animalID);\r\n            setAnimal(fetchedAnimal.data.animal)\r\n            setOrg(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    id: fetchedAnimal.data.animal.organization_id\r\n                }\r\n            })\r\n        }\r\n\r\n        fetchAnimal()\r\n        \r\n    },[])\r\n\r\n    useEffect(() => {\r\n       const getOrg = async (id) => {\r\n            let resp = await getOrganization(id)\r\n            setOrg((prevState) => {\r\n                return {\r\n                    ...prevState,\r\n                    data: resp.data.organization\r\n                }\r\n            } )\r\n       }\r\n       if(org.id) {\r\n        getOrg(org.id)\r\n       }\r\n      \r\n    }, [])\r\n\r\n\r\n    console.log(animal)\r\n    console.log(org.data)\r\n    // setOrganization(org.id)\r\n    \r\n   \r\n    return (\r\n        <Container maxWidth='lg'>\r\n            <div className={styles.animalPage}>\r\n            <Grid container direction='row' className={styles.mainGrid}>\r\n            <h1>{\r\n                animal ? \r\n                <div>\r\n                   \r\n                        {\r\n                            animal.photos ? \r\n                            <Grid container direction='column'>\r\n                                {\r\n                                    animal.photos.map(photo => {\r\n                                        return <img src={photo.medium} alt=\"animal-photo\" className={styles.pagePhoto}/>\r\n                                    })\r\n                                }\r\n                                \r\n                            </Grid> : null\r\n                        }\r\n                    \r\n                    </div>  : null\r\n                }</h1>\r\n\r\n                <Grid xs={8} className={styles.infoContainer}>\r\n                    {\r\n                        animal ?\r\n                        <div>\r\n                        <h1>{animal.name}</h1>\r\n                       \r\n                       <Grid container direction='row'>\r\n                        <Typography variant='body1' className={styles.littleBox}>\r\n                            {animal.age}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.littleBox}>\r\n                            {animal.size}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.littleBox}>\r\n                            {animal.gender}\r\n                        </Typography>\r\n                        </Grid>\r\n\r\n                        <h1>About</h1>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                           Spayed/neutered: {animal.attributes.spayed_neutered ? 'Yes' : 'No'}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                           House trained: {animal.attributes.house_trained ? 'Yes' : 'No'}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                          Special needs: {animal.attributes.special_needs ? 'Yes' : 'No'}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                          Breed: {animal.breeds.primary}\r\n                        </Typography>\r\n                        </div>  : null\r\n                    }   \r\n               \r\n                   \r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default AnimalPage;"]},"metadata":{},"sourceType":"module"}