{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0442\\u043E\\u043B\\u0438\\u0439\\\\desktop\\\\test-find-friend\\\\client\\\\src\\\\pages\\\\animals-page\\\\animals-page.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport AnimalCard from '../../components/animal-card/animal-card.component';\nimport PaginationBox from '../../components/pagination/pagination.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport SideMenu from '../../components/sidemenu/sidemenu.component';\nimport { getOptionalAnimal } from '../../api/api';\nimport './animals-page.styles.css';\n\nconst AnimalsPage = ({\n  match\n}) => {\n  // This will be page instead cat-page and dogs-page\n  // Get animals type to make query\n  // const params = match.params.type;\n  // const animalType = params.charAt(0).toUpperCase() + params.slice(1);\n  // State to keep 20 animals profiles\n  const [cats, setCats] = useState([]); // State to keep track of pages\n\n  const [pages, setPages] = useState(0); // State to keep track of query changes\n\n  const [query, setQuery] = useState({\n    type: animalType,\n    gender: '',\n    age: '',\n    size: ''\n  }); // On Component mount make query to Petfinder API\n\n  useEffect(() => {\n    const getAnimals = async () => {\n      let animals = await getOptionalAnimal(1, query);\n      setCats(animals.data.animals);\n      setPages(animals.data.pagination.total_pages);\n    };\n\n    getAnimals();\n  }, []); // Handle hange of param from match\n\n  useEffect(() => {\n    setQuery(() => {\n      return {\n        type: animalType,\n        gender: '',\n        age: '',\n        size: ''\n      };\n    });\n    const newQuery = {\n      type: animalType,\n      gender: '',\n      age: '',\n      size: ''\n    };\n    setCats([]);\n\n    const getAnimals = async () => {\n      let animals = await getOptionalAnimal(1, newQuery);\n      setCats(animals.data.animals);\n      setPages(animals.data.pagination.total_pages);\n    };\n\n    getAnimals();\n  }, [animalType]); // Set current Page\n\n  const handlePagination = async (e, num) => {\n    setCats([]);\n    window.scrollTo(0, 0);\n    let nextAnimals = await getOptionalAnimal(num, query);\n    setCats(nextAnimals.data.animals);\n  }; // Handle search params changes\n\n\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n    console.log(e.target);\n    setQuery(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  }; // Get data with search params\n\n\n  const handleSubmit = async () => {\n    console.log(query);\n    setCats([]);\n    window.scrollTo(0, 0);\n    let filter = await getOptionalAnimal(1, query);\n    setCats(filter.data.animals);\n    setPages(filter.data.pagination.total_pages);\n  };\n\n  console.log('This is match ', animalType);\n  console.log('This is Query ', query);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"catsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SideMenu, {\n    onChange: handleChange,\n    query: query,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    className: \"gridContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, cats[0] ? cats.map(animal => {\n    return /*#__PURE__*/React.createElement(AnimalCard, {\n      animal: animal,\n      key: animal.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 36\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(PaginationBox, {\n    pages: pages,\n    onChange: handlePagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default AnimalsPage;","map":{"version":3,"sources":["C:/Users/Анатолий/desktop/test-find-friend/client/src/pages/animals-page/animals-page.component.jsx"],"names":["React","useState","useEffect","Container","Grid","AnimalCard","PaginationBox","Spinner","SideMenu","getOptionalAnimal","AnimalsPage","match","cats","setCats","pages","setPages","query","setQuery","type","animalType","gender","age","size","getAnimals","animals","data","pagination","total_pages","newQuery","handlePagination","e","num","window","scrollTo","nextAnimals","handleChange","name","target","value","console","log","prevState","handleSubmit","filter","map","animal","id"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport {Container, Grid} from '@material-ui/core';\r\nimport AnimalCard from '../../components/animal-card/animal-card.component';\r\nimport PaginationBox from '../../components/pagination/pagination.component';\r\nimport Spinner from '../../components/spinner/spinner.component';\r\nimport SideMenu from '../../components/sidemenu/sidemenu.component';\r\nimport {getOptionalAnimal} from '../../api/api';\r\nimport './animals-page.styles.css';\r\n\r\nconst AnimalsPage = ({match}) => {\r\n    \r\n    // This will be page instead cat-page and dogs-page\r\n\r\n    // Get animals type to make query\r\n    // const params = match.params.type;\r\n    // const animalType = params.charAt(0).toUpperCase() + params.slice(1);\r\n    // State to keep 20 animals profiles\r\n    const [cats, setCats]  = useState([]);\r\n    // State to keep track of pages\r\n    const [pages, setPages] = useState(0);\r\n    // State to keep track of query changes\r\n    const [query, setQuery] = useState({\r\n        type: animalType,\r\n        gender: '',\r\n        age: '',\r\n        size: ''\r\n       \r\n    });\r\n    // On Component mount make query to Petfinder API\r\n    useEffect(() => {\r\n        const getAnimals = async () => {\r\n            let animals = await getOptionalAnimal(1, query)\r\n            setCats(animals.data.animals)\r\n            setPages(animals.data.pagination.total_pages) \r\n        }\r\n\r\n        getAnimals()\r\n    },[])\r\n\r\n    // Handle hange of param from match\r\n    useEffect(() => {\r\n\r\n        setQuery(() => {\r\n            return {\r\n               type: animalType,\r\n               gender: '',\r\n               age: '',\r\n               size: ''\r\n            }\r\n        })\r\n        const newQuery = { type: animalType, gender: '', age: '', size: ''}\r\n        setCats([])\r\n        const getAnimals = async () => {\r\n            let animals = await getOptionalAnimal(1, newQuery)\r\n            setCats(animals.data.animals)\r\n            setPages(animals.data.pagination.total_pages) \r\n        }\r\n\r\n        getAnimals()\r\n    },[animalType])\r\n   \r\n    // Set current Page\r\n    const handlePagination = async (e, num) => {\r\n        setCats([])\r\n        window.scrollTo(0,0)\r\n        let nextAnimals = await getOptionalAnimal(num,query)\r\n       \r\n        setCats(nextAnimals.data.animals)\r\n    }\r\n    // Handle search params changes\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        console.log(e.target)\r\n        setQuery((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    // Get data with search params\r\n    const handleSubmit = async () => {\r\n        console.log(query)\r\n        setCats([])\r\n        window.scrollTo(0,0)\r\n        let filter = await getOptionalAnimal(1,query)\r\n        setCats(filter.data.animals)\r\n        setPages(filter.data.pagination.total_pages)\r\n       \r\n    }\r\n\r\n    console.log('This is match ', animalType)\r\n    console.log('This is Query ', query)\r\n    \r\n\r\n    return (\r\n        <div className='catsPage'>\r\n            \r\n           \r\n            <Container maxWidth='lg'>\r\n            <SideMenu onChange={handleChange} query={query} onSubmit={handleSubmit} />\r\n                <Grid container direction='row' justify='center' className='gridContainer'>\r\n                    {\r\n                        cats[0] ?\r\n                        cats.map(animal => {\r\n                            return <AnimalCard animal={animal} key={animal.id} />\r\n                        }) : <Spinner />\r\n                    }\r\n                </Grid>\r\n                <PaginationBox pages={pages} onChange={handlePagination} />\r\n            </Container>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default AnimalsPage;"]},"metadata":{},"sourceType":"module"}