{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0442\\u043E\\u043B\\u0438\\u0439\\\\desktop\\\\find-friend\\\\find-friend\\\\src\\\\pages\\\\animal-page\\\\animal-page.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getAnimal, getOrganization } from '../../api/api';\nimport { getLocation } from '../../api/geocode';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport NoImage from '../../assets/images/no-image.png';\nimport OrgContainer from '../../components/org/org.component';\nimport GoogleMap from '../../components/google-map/google-map.component';\nimport styles from './animal-page.module.css';\n\nconst AnimalPage = props => {\n  let [animal, setAnimal] = useState();\n  let [id, setId] = useState();\n  let [org, setOrg] = useState();\n  let [location, setLocation] = useState({});\n  let animalID = props.match.params.id;\n  console.log('This is ID --->', props.match.params.id);\n  useEffect(() => {\n    const fetchAnimal = async () => {\n      const fetchedAnimal = await getAnimal(animalID);\n      setAnimal(fetchedAnimal.data.animal);\n      setId(fetchedAnimal.data.animal.organization_id);\n    };\n\n    fetchAnimal();\n    console.log(id, org);\n  }, []);\n  useEffect(() => {\n    const getOrg = async () => {\n      try {\n        let resp = await getOrganization(id);\n        setOrg(resp.data.organization);\n        console.log(id, org);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getOrg();\n    console.log('data===>', org);\n  }, [id]);\n  useEffect(() => {\n    if (org) {\n      const getAddres = async () => {\n        try {\n          const loc = await getLocation(org.address.address1);\n          setLocation(loc.results[0].geometry.location);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n      getAddres();\n    }\n  }, [org]);\n  console.log(animal);\n  console.log(id, org);\n  console.log(location); // setOrganization(org.id)\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.animalPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: styles.mainGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, animal ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, animal.photos ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, animal.photos.map(photo => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: photo.medium,\n      alt: \"animal-photo\",\n      className: styles.pagePhoto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 48\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(\"img\", {\n    src: NoImage,\n    alt: \"no-image\",\n    className: styles.pagePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 40\n    }\n  })) : null), /*#__PURE__*/React.createElement(Grid, {\n    lg: 8,\n    sm: 12,\n    className: styles.infoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, animal ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, animal.name), /*#__PURE__*/React.createElement(Grid, {\n    lg: 8,\n    sm: 12,\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.littleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, animal.age), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.littleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, animal.size), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.littleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, animal.gender)), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Spayed/neutered:  \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 46\n    }\n  }, animal.attributes.spayed_neutered ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, \"House trained:  \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 44\n    }\n  }, animal.attributes.house_trained ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Special needs:  \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 43\n    }\n  }, animal.attributes.special_needs ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, \"Breed:  \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 35\n    }\n  }, animal.breeds.primary))) : null, org ? /*#__PURE__*/React.createElement(OrgContainer, {\n    org: org,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }) : null, location.lat ? /*#__PURE__*/React.createElement(GoogleMap, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 26\n    }\n  }) : null))));\n};\n\nexport default AnimalPage;","map":{"version":3,"sources":["C:/Users/Анатолий/desktop/find-friend/find-friend/src/pages/animal-page/animal-page.component.jsx"],"names":["React","useState","useEffect","getAnimal","getOrganization","getLocation","Container","Grid","Typography","NoImage","OrgContainer","GoogleMap","styles","AnimalPage","props","animal","setAnimal","id","setId","org","setOrg","location","setLocation","animalID","match","params","console","log","fetchAnimal","fetchedAnimal","data","organization_id","getOrg","resp","organization","err","getAddres","loc","address","address1","results","geometry","animalPage","mainGrid","photos","map","photo","medium","pagePhoto","infoContainer","name","littleBox","age","size","gender","aboutItem","attributes","spayed_neutered","house_trained","special_needs","breeds","primary","lat"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {getAnimal, getOrganization} from '../../api/api';\r\nimport {getLocation} from '../../api/geocode';\r\nimport {Container, Grid, Typography} from '@material-ui/core';\r\nimport NoImage from '../../assets/images/no-image.png'\r\nimport OrgContainer from '../../components/org/org.component';\r\nimport GoogleMap from '../../components/google-map/google-map.component';\r\nimport styles from './animal-page.module.css';\r\n\r\nconst AnimalPage = (props) => {\r\n    let [animal, setAnimal] = useState()\r\n    let [id, setId] = useState()\r\n    let [org, setOrg] = useState()\r\n    let [location, setLocation] = useState({})\r\n    let animalID = props.match.params.id;\r\n    console.log('This is ID --->',props.match.params.id)\r\n    useEffect(() => {\r\n        const fetchAnimal = async () => {\r\n            const fetchedAnimal = await getAnimal(animalID);\r\n            setAnimal(fetchedAnimal.data.animal)\r\n            setId(fetchedAnimal.data.animal.organization_id)\r\n        }\r\n        fetchAnimal()\r\n        console.log(id, org) \r\n    },[])\r\n\r\n    \r\n    useEffect(() => {\r\n        const getOrg = async () => {\r\n                \r\n            try {\r\n              let resp = await getOrganization(id)\r\n              setOrg(resp.data.organization)\r\n              console.log(id, org)\r\n            } catch (err) {\r\n              console.log(err)\r\n            }\r\n             \r\n    }\r\n      getOrg()\r\n      console.log('data===>',org)\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        \r\n            if(org) {\r\n                const getAddres = async () => {\r\n                   try {\r\n                    const loc = await getLocation(org.address.address1)\r\n                    setLocation(loc.results[0].geometry.location)\r\n                     } catch(err) {\r\n                         console.log(err)\r\n                     }\r\n                  \r\n                }\r\n                \r\n                getAddres()\r\n            }\r\n        \r\n           \r\n        \r\n      \r\n     \r\n       \r\n    },[org])\r\n    console.log(animal)\r\n    console.log(id, org)\r\n    console.log(location)\r\n    // setOrganization(org.id)\r\n    \r\n   \r\n    return (\r\n        <Container maxWidth='lg'>\r\n            <div className={styles.animalPage}>\r\n            <Grid container direction='row' className={styles.mainGrid}>\r\n            <h1>{\r\n                animal ? \r\n                <div>\r\n                   \r\n                        {\r\n                            animal.photos ? \r\n                            <Grid container direction='column'>\r\n                                {\r\n                                    animal.photos.map(photo => {\r\n                                        return <img src={photo.medium} alt=\"animal-photo\" className={styles.pagePhoto}/>\r\n                                    })\r\n                                }\r\n                                \r\n                            </Grid> :  <img src={NoImage} alt=\"no-image\" className={styles.pagePhoto}/>\r\n                        }\r\n                    \r\n                    </div>  : null\r\n                }</h1>\r\n\r\n                <Grid lg={8} sm={12} className={styles.infoContainer}>\r\n                    {\r\n                        animal ?\r\n                        <div>\r\n                        <h1>{animal.name}</h1>\r\n                       \r\n                       <Grid lg={8} sm={12} container direction='row'>\r\n                        <Typography variant='body1' className={styles.littleBox}>\r\n                             {animal.age}  \r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.littleBox}>\r\n                           {animal.size}     \r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.littleBox}>\r\n                         {animal.gender}\r\n                        </Typography>\r\n                        </Grid>\r\n\r\n                        <h1>About</h1>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                           Spayed/neutered:  <strong>{animal.attributes.spayed_neutered ? 'Yes' : 'No'}</strong>  \r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                           House trained:  <strong>{animal.attributes.house_trained ? 'Yes' : 'No'}</strong>  \r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                          Special needs:  <strong>{animal.attributes.special_needs ? 'Yes' : 'No'}</strong>  \r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                          Breed:  <strong>{animal.breeds.primary}</strong>  \r\n                        </Typography>\r\n                        </div>  : null\r\n                    }  \r\n\r\n                        {\r\n                            org ? \r\n                            <OrgContainer org={org}/>\r\n                            : null\r\n                        }\r\n                       \r\n                     {\r\n                         location.lat ?\r\n                         <GoogleMap location={location} /> :\r\n                         null\r\n                     }   \r\n                 \r\n                    \r\n                   \r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default AnimalPage;"]},"metadata":{},"sourceType":"module"}