{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0442\\u043E\\u043B\\u0438\\u0439\\\\desktop\\\\find-friend\\\\find-friend\\\\src\\\\pages\\\\animal-page\\\\animal-page.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getAnimal, getOrganization } from '../../api/api';\nimport { getLocation } from '../../api/geocode';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport styles from './animal-page.module.css';\n\nconst AnimalPage = props => {\n  let [animal, setAnimal] = useState();\n  let [id, setId] = useState();\n  let [org, setOrg] = useState();\n  let animalID = props.match.params.id;\n  console.log('This is ID --->', props.match.params.id);\n  useEffect(() => {\n    const fetchAnimal = async () => {\n      const fetchedAnimal = await getAnimal(animalID);\n      setAnimal(fetchedAnimal.data.animal);\n      setId(fetchedAnimal.data.animal.organization_id);\n    };\n\n    fetchAnimal();\n    console.log(id, org);\n  }, []);\n  useEffect(() => {\n    const getOrg = async () => {\n      try {\n        let resp = await getOrganization(id);\n        setOrg(resp.data.organization);\n        console.log(id, org);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getOrg();\n    console.log('data===>', org);\n  }, [id]);\n  useEffect(() => {\n    const getAddres = getLocation(org.adresses.adress1);\n    console.log(getAddres);\n  }, [org]);\n  console.log(animal);\n  console.log(id, org); // setOrganization(org.id)\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.animalPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: styles.mainGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, animal ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, animal.photos ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, animal.photos.map(photo => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: photo.medium,\n      alt: \"animal-photo\",\n      className: styles.pagePhoto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 48\n      }\n    });\n  })) : null) : null), /*#__PURE__*/React.createElement(Grid, {\n    xs: 8,\n    className: styles.infoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, animal ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, animal.name), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.littleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, animal.age), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.littleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, animal.size), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.littleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, animal.gender)), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Spayed/neutered: \", animal.attributes.spayed_neutered ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"House trained: \", animal.attributes.house_trained ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Special needs: \", animal.attributes.special_needs ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: styles.aboutItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"Breed: \", animal.breeds.primary)) : null))));\n};\n\nexport default AnimalPage;","map":{"version":3,"sources":["C:/Users/Анатолий/desktop/find-friend/find-friend/src/pages/animal-page/animal-page.component.jsx"],"names":["React","useState","useEffect","getAnimal","getOrganization","getLocation","Container","Grid","Typography","styles","AnimalPage","props","animal","setAnimal","id","setId","org","setOrg","animalID","match","params","console","log","fetchAnimal","fetchedAnimal","data","organization_id","getOrg","resp","organization","err","getAddres","adresses","adress1","animalPage","mainGrid","photos","map","photo","medium","pagePhoto","infoContainer","name","littleBox","age","size","gender","aboutItem","attributes","spayed_neutered","house_trained","special_needs","breeds","primary"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {getAnimal, getOrganization} from '../../api/api';\r\nimport {getLocation} from '../../api/geocode';\r\nimport {Container, Grid, Typography} from '@material-ui/core';\r\nimport styles from './animal-page.module.css';\r\n\r\nconst AnimalPage = (props) => {\r\n    let [animal, setAnimal] = useState()\r\n    let [id, setId] = useState()\r\n    let [org, setOrg] = useState()\r\n    let animalID = props.match.params.id;\r\n    console.log('This is ID --->',props.match.params.id)\r\n    useEffect(() => {\r\n        const fetchAnimal = async () => {\r\n            const fetchedAnimal = await getAnimal(animalID);\r\n            setAnimal(fetchedAnimal.data.animal)\r\n            setId(fetchedAnimal.data.animal.organization_id)\r\n        }\r\n        fetchAnimal()\r\n        console.log(id, org) \r\n    },[])\r\n\r\n    \r\n    useEffect(() => {\r\n        const getOrg = async () => {\r\n                \r\n            try {\r\n              let resp = await getOrganization(id)\r\n              setOrg(resp.data.organization)\r\n              console.log(id, org)\r\n            } catch (err) {\r\n              console.log(err)\r\n            }\r\n             \r\n    }\r\n      getOrg()\r\n      console.log('data===>',org)\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        const getAddres = getLocation(org.adresses.adress1)\r\n        console.log(getAddres)\r\n    },[org])\r\n    console.log(animal)\r\n    console.log(id, org)\r\n    // setOrganization(org.id)\r\n    \r\n   \r\n    return (\r\n        <Container maxWidth='lg'>\r\n            <div className={styles.animalPage}>\r\n            <Grid container direction='row' className={styles.mainGrid}>\r\n            <h1>{\r\n                animal ? \r\n                <div>\r\n                   \r\n                        {\r\n                            animal.photos ? \r\n                            <Grid container direction='column'>\r\n                                {\r\n                                    animal.photos.map(photo => {\r\n                                        return <img src={photo.medium} alt=\"animal-photo\" className={styles.pagePhoto}/>\r\n                                    })\r\n                                }\r\n                                \r\n                            </Grid> : null\r\n                        }\r\n                    \r\n                    </div>  : null\r\n                }</h1>\r\n\r\n                <Grid xs={8} className={styles.infoContainer}>\r\n                    {\r\n                        animal ?\r\n                        <div>\r\n                        <h1>{animal.name}</h1>\r\n                       \r\n                       <Grid container direction='row'>\r\n                        <Typography variant='body1' className={styles.littleBox}>\r\n                            {animal.age}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.littleBox}>\r\n                            {animal.size}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.littleBox}>\r\n                            {animal.gender}\r\n                        </Typography>\r\n                        </Grid>\r\n\r\n                        <h1>About</h1>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                           Spayed/neutered: {animal.attributes.spayed_neutered ? 'Yes' : 'No'}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                           House trained: {animal.attributes.house_trained ? 'Yes' : 'No'}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                          Special needs: {animal.attributes.special_needs ? 'Yes' : 'No'}\r\n                        </Typography>\r\n                        <Typography variant='body1' className={styles.aboutItem}>\r\n                          Breed: {animal.breeds.primary}\r\n                        </Typography>\r\n                        </div>  : null\r\n                    }   \r\n               \r\n                   \r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default AnimalPage;"]},"metadata":{},"sourceType":"module"}