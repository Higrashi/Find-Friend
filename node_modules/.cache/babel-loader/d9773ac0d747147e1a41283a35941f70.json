{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0442\\u043E\\u043B\\u0438\\u0439\\\\desktop\\\\test-find-friend\\\\client\\\\src\\\\pages\\\\animal-page\\\\animal-page.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getAnimal, getOrganization } from '../../api/api';\nimport { getLocation } from '../../api/geocode';\nimport { useWindowDimensions } from '../../components/window-hook/window-dimension-hook';\nimport { Container, Grid } from '@material-ui/core';\nimport Spinner from '../../components/spinner/spinner.component';\nimport PhotoBox from '../../components/photo-box/photo-box.component';\nimport PhotoBoxMobile from '../../components/photo-box-mobile/photo-box-mobile.component';\nimport Modal from '../../components/modal/modal.component';\nimport AboutContainer from '../../components/about-container/about-container.component';\nimport OrgContainer from '../../components/org/org.component';\nimport GoogleMap from '../../components/google-map/google-map.component';\nimport './animal-page.styles.css';\n\nconst AnimalPage = props => {\n  let [animal, setAnimal] = useState();\n  let [id, setId] = useState();\n  let [org, setOrg] = useState();\n  let [location, setLocation] = useState({});\n  let [modal, setModal] = useState({\n    active: false,\n    src: ''\n  });\n  let animalID = props.match.params.id;\n  const {\n    width\n  } = useWindowDimensions();\n  console.log('This is ID --->', props.match.params.id);\n  useEffect(() => {\n    const fetchAnimal = async () => {\n      const fetchedAnimal = await getAnimal(animalID);\n      setAnimal(fetchedAnimal.data.animal);\n      setId(fetchedAnimal.data.animal.organization_id);\n    };\n\n    fetchAnimal();\n    console.log(id, org);\n  }, []);\n  useEffect(() => {\n    const getOrg = async () => {\n      try {\n        let resp = await getOrganization(id);\n        setOrg(resp.data.organization);\n        console.log(id, org);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getOrg();\n    console.log('data===>', org);\n  }, [id]);\n  useEffect(() => {\n    if (org) {\n      const getAddres = async () => {\n        try {\n          const loc = await getLocation(org.address.address1);\n          setLocation(loc.results[0].geometry.location);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n      getAddres();\n    }\n  }, [org]);\n  console.log(animal);\n\n  const handlePhoto = e => {\n    let imgId = e.target.id;\n    setModal({\n      active: true,\n      src: animal.photos[imgId].full\n    });\n  };\n\n  const handleClose = () => {\n    setModal(() => {\n      return {\n        active: false,\n        src: ''\n      };\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    active: modal.active,\n    src: modal.src,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animalPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: \"mainGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, !animal ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }) : null, animal ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 3,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, width > 1000 ? /*#__PURE__*/React.createElement(PhotoBox, {\n    photos: animal.photos,\n    onClick: handlePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(PhotoBoxMobile, {\n    photos: animal.photos,\n    onClick: handlePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 24\n    }\n  })) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 9,\n    md: 9,\n    sm: 12,\n    xs: 12,\n    className: \"infoContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AboutContainer, {\n    animal: animal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 20\n    }\n  }), org ? /*#__PURE__*/React.createElement(OrgContainer, {\n    org: org,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 28\n    }\n  }) : null, location.lat ? /*#__PURE__*/React.createElement(GoogleMap, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 26\n    }\n  }) : null))));\n};\n\nexport default AnimalPage;","map":{"version":3,"sources":["C:/Users/Анатолий/desktop/test-find-friend/client/src/pages/animal-page/animal-page.component.jsx"],"names":["React","useState","useEffect","getAnimal","getOrganization","getLocation","useWindowDimensions","Container","Grid","Spinner","PhotoBox","PhotoBoxMobile","Modal","AboutContainer","OrgContainer","GoogleMap","AnimalPage","props","animal","setAnimal","id","setId","org","setOrg","location","setLocation","modal","setModal","active","src","animalID","match","params","width","console","log","fetchAnimal","fetchedAnimal","data","organization_id","getOrg","resp","organization","err","getAddres","loc","address","address1","results","geometry","handlePhoto","e","imgId","target","photos","full","handleClose","lat"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {getAnimal, getOrganization} from '../../api/api';\r\nimport {getLocation} from '../../api/geocode';\r\nimport {useWindowDimensions} from '../../components/window-hook/window-dimension-hook';\r\nimport {Container, Grid} from '@material-ui/core';\r\nimport Spinner from '../../components/spinner/spinner.component';\r\nimport PhotoBox from '../../components/photo-box/photo-box.component';\r\nimport PhotoBoxMobile from '../../components/photo-box-mobile/photo-box-mobile.component';\r\nimport Modal from '../../components/modal/modal.component';\r\nimport AboutContainer from '../../components/about-container/about-container.component';\r\nimport OrgContainer from '../../components/org/org.component';\r\nimport GoogleMap from '../../components/google-map/google-map.component';\r\n\r\nimport './animal-page.styles.css';\r\n\r\n\r\nconst AnimalPage = (props) => {\r\n    let [animal, setAnimal] = useState()\r\n    let [id, setId] = useState()\r\n    let [org, setOrg] = useState()\r\n    let [location, setLocation] = useState({})\r\n    let [modal, setModal] = useState({\r\n        active: false,\r\n        src: ''\r\n    })\r\n    let animalID = props.match.params.id;\r\n    const {width} = useWindowDimensions();\r\n    console.log('This is ID --->',props.match.params.id)\r\n    useEffect(() => {\r\n        const fetchAnimal = async () => {\r\n            const fetchedAnimal = await getAnimal(animalID);\r\n            setAnimal(fetchedAnimal.data.animal)\r\n            setId(fetchedAnimal.data.animal.organization_id)\r\n        }\r\n        fetchAnimal()\r\n        console.log(id, org) \r\n    },[])\r\n\r\n    \r\n    useEffect(() => {\r\n        const getOrg = async () => {\r\n                \r\n            try {\r\n              let resp = await getOrganization(id)\r\n              setOrg(resp.data.organization)\r\n              console.log(id, org)\r\n            } catch (err) {\r\n              console.log(err)\r\n            }\r\n             \r\n    }\r\n      getOrg()\r\n      console.log('data===>',org)\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        \r\n            if(org) {\r\n                const getAddres = async () => {\r\n                   try {\r\n                    const loc = await getLocation(org.address.address1)\r\n                    setLocation(loc.results[0].geometry.location)\r\n                     } catch(err) {\r\n                         console.log(err)\r\n                     }\r\n                  \r\n                }\r\n                \r\n                getAddres()\r\n            }\r\n        \r\n           \r\n        \r\n      \r\n     \r\n       \r\n    },[org])\r\n    console.log(animal)\r\n   \r\n    const handlePhoto = (e) => {\r\n        let imgId = e.target.id\r\n        \r\n       \r\n     \r\n        setModal({ active: true, src: animal.photos[imgId].full})\r\n        \r\n    }\r\n\r\n    const handleClose = () => {\r\n        setModal(() =>{\r\n            return {\r\n                active: false,\r\n                src: ''\r\n            }\r\n        })\r\n    }\r\n   \r\n    return (\r\n        <Container maxWidth='lg'>\r\n            <Modal active={modal.active} src={modal.src} onClose={handleClose} />\r\n            <div className='animalPage'>\r\n\r\n            <Grid container direction='row'  className='mainGrid'>\r\n                {\r\n                    !animal ?\r\n                        <Spinner /> : null\r\n                }\r\n\r\n            {\r\n                animal ? \r\n                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                   \r\n                   {\r\n                       width > 1000 ? <PhotoBox photos={animal.photos} onClick={handlePhoto} /> : \r\n                       <PhotoBoxMobile photos={animal.photos} onClick={handlePhoto} />\r\n                   }\r\n                  \r\n                       \r\n                    \r\n                   </Grid>  : null\r\n                }\r\n\r\n                <Grid item lg={9} md={9} sm={12} xs={12} className='infoContainer'>\r\n                    \r\n                   \r\n                   <AboutContainer animal={animal} /> \r\n                        \r\n                     \r\n\r\n                        {\r\n                            org ?\r\n                           <OrgContainer org={org}/>\r\n                          : null\r\n                        }\r\n                       \r\n                     {\r\n                         location.lat ?\r\n                         <GoogleMap location={location} /> :\r\n                         null\r\n                     }   \r\n                 \r\n                    \r\n                   \r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default AnimalPage;"]},"metadata":{},"sourceType":"module"}