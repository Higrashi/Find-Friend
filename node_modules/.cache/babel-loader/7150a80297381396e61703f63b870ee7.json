{"ast":null,"code":"import { Client } from '@petfinder/petfinder-js'; // const petfinderApi = process.env.REACT_APP_PETFINDER_API;\n// const petfinderSecret = process.env.REACT_APP_PETFINDER_SECRET;\n\nlet client = new Client({\n  apiKey: \"msoH5wpzdE229wIRzF4M4PUM61SsKRf8wXzLdGVvPeFLGUvRPb\",\n  secret: \"TFFm4sKwgsT1YyJH8uMPoACe1Z8HkQcF4SHSxxsH\"\n});\nexport const getAnimals = async page => {\n  if (!page) {\n    return await client.animal.search();\n  } else {\n    return await client.animal.search({\n      page: page\n    });\n  }\n};\nexport const getAnimal = async id => {\n  try {\n    return await client.animal.show(id);\n  } catch (err) {\n    console.log('Opps, some err', err);\n  }\n};\nexport const getOptionalAnimal = async (page, query) => {\n  if (page) {\n    try {\n      const animals = await client.animal.search({\n        type: type,\n        page: page,\n        ...query\n      });\n      return animals;\n    } catch (err) {\n      console.log(err);\n    }\n  } else {\n    try {\n      const animals = await client.animal.search({\n        type: type,\n        ...query\n      });\n      return animals;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n};\nexport const getOrganization = async name => {\n  if (name) {\n    const response = await client.organization.show(name);\n    return response;\n  }\n};\nexport const getTypes = async () => {\n  const response = await client.animalData.types();\n  return response;\n};","map":{"version":3,"sources":["C:/Users/Анатолий/desktop/test-find-friend/src/api/api.js"],"names":["Client","client","apiKey","secret","getAnimals","page","animal","search","getAnimal","id","show","err","console","log","getOptionalAnimal","query","animals","type","getOrganization","name","response","organization","getTypes","animalData","types"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,yBAArB,C,CACA;AACA;;AACA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW;AAACE,EAAAA,MAAM,EAAE,oDAAT;AAA+DC,EAAAA,MAAM,EAAE;AAAvE,CAAX,CAAb;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AAEtC,MAAG,CAACA,IAAJ,EAAU;AACN,WAAO,MAAMJ,MAAM,CAACK,MAAP,CAAcC,MAAd,EAAb;AACH,GAFD,MAEO;AACH,WAAO,MAAMN,MAAM,CAACK,MAAP,CAAcC,MAAd,CAAqB;AAACF,MAAAA,IAAI,EAAEA;AAAP,KAArB,CAAb;AACH;AAIJ,CAVM;AAYP,OAAO,MAAMG,SAAS,GAAG,MAAOC,EAAP,IAAc;AAEnC,MAAI;AACA,WAAO,MAAMR,MAAM,CAACK,MAAP,CAAcI,IAAd,CAAmBD,EAAnB,CAAb;AACH,GAFD,CAEE,OAAOE,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACH;AAGJ,CATM;AAWP,OAAO,MAAMG,iBAAiB,GAAG,OAAOT,IAAP,EAAaU,KAAb,KAAuB;AACpD,MAAGV,IAAH,EAAS;AACL,QAAI;AACA,YAAMW,OAAO,GAAG,MAAMf,MAAM,CAACK,MAAP,CAAcC,MAAd,CAAqB;AAACU,QAAAA,IAAI,EAAEA,IAAP;AAAaZ,QAAAA,IAAI,EAAEA,IAAnB;AAAyB,WAAGU;AAA5B,OAArB,CAAtB;AACA,aAAOC,OAAP;AACH,KAHD,CAGE,OAAOL,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAPD,MAOO;AACH,QAAI;AACA,YAAMK,OAAO,GAAG,MAAMf,MAAM,CAACK,MAAP,CAAcC,MAAd,CAAqB;AAACU,QAAAA,IAAI,EAAEA,IAAP;AAAa,WAAGF;AAAhB,OAArB,CAAtB;AACA,aAAOC,OAAP;AACH,KAHD,CAGE,OAAOL,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;AAEJ,CAjBM;AAmBP,OAAO,MAAMO,eAAe,GAAG,MAAOC,IAAP,IAAgB;AAC3C,MAAGA,IAAH,EAAS;AACN,UAAMC,QAAQ,GAAG,MAAMnB,MAAM,CAACoB,YAAP,CAAoBX,IAApB,CAAyBS,IAAzB,CAAvB;AACA,WAAOC,QAAP;AACF;AAEJ,CANM;AAQP,OAAO,MAAME,QAAQ,GAAG,YAAY;AAChC,QAAMF,QAAQ,GAAG,MAAMnB,MAAM,CAACsB,UAAP,CAAkBC,KAAlB,EAAvB;AACA,SAAOJ,QAAP;AAEH,CAJM","sourcesContent":["import {Client} from '@petfinder/petfinder-js';\r\n// const petfinderApi = process.env.REACT_APP_PETFINDER_API;\r\n// const petfinderSecret = process.env.REACT_APP_PETFINDER_SECRET;\r\nlet client = new Client({apiKey: \"msoH5wpzdE229wIRzF4M4PUM61SsKRf8wXzLdGVvPeFLGUvRPb\", secret: \"TFFm4sKwgsT1YyJH8uMPoACe1Z8HkQcF4SHSxxsH\"})\r\n\r\nexport const getAnimals = async (page) => {\r\n\r\n    if(!page) {\r\n        return await client.animal.search()\r\n    } else {\r\n        return await client.animal.search({page: page})\r\n    }\r\n\r\n  \r\n       \r\n}\r\n\r\nexport const getAnimal = async (id) => {\r\n\r\n    try {\r\n        return await client.animal.show(id)\r\n    } catch (err) {\r\n        console.log('Opps, some err', err)\r\n    }\r\n\r\n   \r\n}\r\n\r\nexport const getOptionalAnimal = async (page, query) => {\r\n    if(page) {\r\n        try {\r\n            const animals = await client.animal.search({type: type, page: page, ...query})\r\n            return animals\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    } else {\r\n        try {\r\n            const animals = await client.animal.search({type: type, ...query})\r\n            return animals\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n   \r\n}\r\n\r\nexport const getOrganization = async (name) => {\r\n    if(name) {\r\n       const response = await client.organization.show(name);\r\n       return response\r\n    }\r\n    \r\n}\r\n\r\nexport const getTypes = async () => {\r\n    const response = await client.animalData.types()\r\n    return response\r\n\r\n}"]},"metadata":{},"sourceType":"module"}