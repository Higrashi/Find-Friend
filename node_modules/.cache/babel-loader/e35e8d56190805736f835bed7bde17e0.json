{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0442\\u043E\\u043B\\u0438\\u0439\\\\desktop\\\\test-find-friend\\\\src\\\\pages\\\\animal-page\\\\animal-page.component.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getAnimal, getOrganization, getTypes } from '../../api/api';\nimport { getLocation } from '../../api/geocode';\nimport { useWindowDimensions } from '../../components/window-hook/window-dimension-hook';\nimport { Container, Grid, Typography, Card, CardContent } from '@material-ui/core';\nimport IconComponent from '../../components/icon/icon.component';\nimport PhotoBox from '../../components/photo-box/photo-box.component';\nimport PhotoBoxMobile from '../../components/photo-box-mobile/photo-box-mobile.component';\nimport Modal from '../../components/modal/modal.component';\nimport OrgContainer from '../../components/org/org.component';\nimport GoogleMap from '../../components/google-map/google-map.component';\nimport './animal-page.styles.css';\n\nconst AnimalPage = props => {\n  let [animal, setAnimal] = useState();\n  let [id, setId] = useState();\n  let [org, setOrg] = useState();\n  let [location, setLocation] = useState({});\n  let [modal, setModal] = useState({\n    active: false,\n    src: ''\n  });\n  let animalID = props.match.params.id;\n  const {\n    width\n  } = useWindowDimensions();\n  console.log('This is ID --->', props.match.params.id);\n  useEffect(() => {\n    const fetchAnimal = async () => {\n      const fetchedAnimal = await getAnimal(animalID);\n      setAnimal(fetchedAnimal.data.animal);\n      setId(fetchedAnimal.data.animal.organization_id);\n    };\n\n    fetchAnimal();\n    console.log(id, org);\n  }, []);\n  useEffect(() => {\n    const getOrg = async () => {\n      try {\n        let resp = await getOrganization(id);\n        setOrg(resp.data.organization);\n        console.log(id, org);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getOrg();\n    console.log('data===>', org);\n  }, [id]);\n  useEffect(() => {\n    if (org) {\n      const getAddres = async () => {\n        try {\n          const loc = await getLocation(org.address.address1);\n          setLocation(loc.results[0].geometry.location);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n      getAddres();\n    }\n  }, [org]);\n  console.log(animal);\n\n  const handlePhoto = e => {\n    let imgId = e.target.id;\n    setModal({\n      active: true,\n      src: animal.photos[imgId].full\n    });\n  };\n\n  const handleClose = () => {\n    setModal(() => {\n      return {\n        active: false,\n        src: ''\n      };\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    active: modal.active,\n    src: modal.src,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animalPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: \"mainGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, animal ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, width > 1000 ? /*#__PURE__*/React.createElement(PhotoBox, {\n    photos: animal.photos,\n    onClick: handlePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(PhotoBoxMobile, {\n    photos: animal.photos,\n    onClick: handlePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 24\n    }\n  })) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: \"infoContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, animal ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, animal.name), /*#__PURE__*/React.createElement(Grid, {\n    lg: 8,\n    sm: 12,\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"littleBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 24\n    }\n  }, animal.gender), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"littleBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, animal.age), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"littleBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, animal.size), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"littleBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, animal.species)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"aboutContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"cardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"iconContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IconComponent, {\n    type: \"Paw\",\n    className: \"cardIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"cardHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"aboutItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"Spayed/neutered:  \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"aboutSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 46\n    }\n  }, animal.attributes.spayed_neutered ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"aboutItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"House trained:  \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 44\n    }\n  }, animal.attributes.house_trained ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"aboutItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"Special needs:  \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 43\n    }\n  }, animal.attributes.special_needs ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"aboutItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, \"Breed:  \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 35\n    }\n  }, animal.breeds.primary)))))) : null, org ? /*#__PURE__*/React.createElement(OrgContainer, {\n    org: org,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 28\n    }\n  }) : null, location.lat ? /*#__PURE__*/React.createElement(GoogleMap, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 26\n    }\n  }) : null))));\n};\n\nexport default AnimalPage;","map":{"version":3,"sources":["C:/Users/Анатолий/desktop/test-find-friend/src/pages/animal-page/animal-page.component.jsx"],"names":["React","useState","useEffect","getAnimal","getOrganization","getTypes","getLocation","useWindowDimensions","Container","Grid","Typography","Card","CardContent","IconComponent","PhotoBox","PhotoBoxMobile","Modal","OrgContainer","GoogleMap","AnimalPage","props","animal","setAnimal","id","setId","org","setOrg","location","setLocation","modal","setModal","active","src","animalID","match","params","width","console","log","fetchAnimal","fetchedAnimal","data","organization_id","getOrg","resp","organization","err","getAddres","loc","address","address1","results","geometry","handlePhoto","e","imgId","target","photos","full","handleClose","name","gender","age","size","species","attributes","spayed_neutered","house_trained","special_needs","breeds","primary","lat"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport {getAnimal, getOrganization, getTypes} from '../../api/api';\r\nimport {getLocation} from '../../api/geocode';\r\nimport {useWindowDimensions} from '../../components/window-hook/window-dimension-hook';\r\nimport {Container, Grid, Typography, Card, CardContent} from '@material-ui/core';\r\nimport IconComponent from '../../components/icon/icon.component';\r\nimport PhotoBox from '../../components/photo-box/photo-box.component';\r\nimport PhotoBoxMobile from '../../components/photo-box-mobile/photo-box-mobile.component';\r\nimport Modal from '../../components/modal/modal.component';\r\nimport OrgContainer from '../../components/org/org.component';\r\nimport GoogleMap from '../../components/google-map/google-map.component';\r\nimport './animal-page.styles.css';\r\n\r\nconst AnimalPage = (props) => {\r\n    let [animal, setAnimal] = useState()\r\n    let [id, setId] = useState()\r\n    let [org, setOrg] = useState()\r\n    let [location, setLocation] = useState({})\r\n    let [modal, setModal] = useState({\r\n        active: false,\r\n        src: ''\r\n    })\r\n    let animalID = props.match.params.id;\r\n    const {width} = useWindowDimensions();\r\n    console.log('This is ID --->',props.match.params.id)\r\n    useEffect(() => {\r\n        const fetchAnimal = async () => {\r\n            const fetchedAnimal = await getAnimal(animalID);\r\n            setAnimal(fetchedAnimal.data.animal)\r\n            setId(fetchedAnimal.data.animal.organization_id)\r\n        }\r\n        fetchAnimal()\r\n        console.log(id, org) \r\n    },[])\r\n\r\n    \r\n    useEffect(() => {\r\n        const getOrg = async () => {\r\n                \r\n            try {\r\n              let resp = await getOrganization(id)\r\n              setOrg(resp.data.organization)\r\n              console.log(id, org)\r\n            } catch (err) {\r\n              console.log(err)\r\n            }\r\n             \r\n    }\r\n      getOrg()\r\n      console.log('data===>',org)\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        \r\n            if(org) {\r\n                const getAddres = async () => {\r\n                   try {\r\n                    const loc = await getLocation(org.address.address1)\r\n                    setLocation(loc.results[0].geometry.location)\r\n                     } catch(err) {\r\n                         console.log(err)\r\n                     }\r\n                  \r\n                }\r\n                \r\n                getAddres()\r\n            }\r\n        \r\n           \r\n        \r\n      \r\n     \r\n       \r\n    },[org])\r\n    console.log(animal)\r\n   \r\n    const handlePhoto = (e) => {\r\n        let imgId = e.target.id\r\n        \r\n       \r\n     \r\n        setModal({ active: true, src: animal.photos[imgId].full})\r\n        \r\n    }\r\n\r\n    const handleClose = () => {\r\n        setModal(() =>{\r\n            return {\r\n                active: false,\r\n                src: ''\r\n            }\r\n        })\r\n    }\r\n   \r\n    return (\r\n        <Container maxWidth='lg'>\r\n            <Modal active={modal.active} src={modal.src} onClose={handleClose} />\r\n            <div className='animalPage'>\r\n            <Grid container direction='row'  className='mainGrid'>\r\n            {\r\n                animal ? \r\n                <Grid item lg={4} sm={12}>\r\n                   \r\n                   {\r\n                       width > 1000 ? <PhotoBox photos={animal.photos} onClick={handlePhoto} /> : \r\n                       <PhotoBoxMobile photos={animal.photos} onClick={handlePhoto} />\r\n                   }\r\n                   {/* <PhotoBox photos={animal.photos} onClick={handlePhoto} /> */}\r\n                       \r\n                    \r\n                   </Grid>  : null\r\n                }\r\n\r\n                <Grid item className='infoContainer'>\r\n                    \r\n                    {\r\n                        animal ?\r\n                        <div>\r\n                        <h1>{animal.name}</h1>\r\n                       \r\n                       <Grid lg={8} sm={12} container direction='row'>\r\n                       <Typography variant='body1' className='littleBox'>\r\n                         {animal.gender}\r\n                        </Typography>\r\n                        <Typography variant='body1' className='littleBox'>\r\n                             {animal.age}  \r\n                        </Typography>\r\n                        <Typography variant='body1' className='littleBox'>\r\n                           {animal.size}     \r\n                        </Typography>\r\n                        \r\n                        <Typography variant='body1' className='littleBox'>\r\n                         {animal.species}\r\n                        </Typography>\r\n                        </Grid>\r\n\r\n                        <div className='aboutContainer'> \r\n                        <Card className='cardContainer'>\r\n                            <CardContent>\r\n                                <div className='iconContainer'>\r\n                                    <IconComponent type='Paw' className='cardIcon' />\r\n                                </div> \r\n                        <h1 className='cardHeader'>About</h1>\r\n                        <Typography variant='body1' className='aboutItem'>\r\n                           Spayed/neutered:  <span className='aboutSpan'>{animal.attributes.spayed_neutered ? 'Yes' : 'No'}</span>  \r\n                        </Typography>\r\n                        <Typography variant='body1' className='aboutItem'>\r\n                           House trained:  <strong>{animal.attributes.house_trained ? 'Yes' : 'No'}</strong>  \r\n                        </Typography>\r\n                        <Typography variant='body1' className='aboutItem'>\r\n                          Special needs:  <strong>{animal.attributes.special_needs ? 'Yes' : 'No'}</strong>  \r\n                        </Typography>\r\n                        <Typography variant='body1' className='aboutItem'>\r\n                          Breed:  <strong>{animal.breeds.primary}</strong>  \r\n                        </Typography>\r\n                        </CardContent>\r\n                        </Card>\r\n                        </div>\r\n                        </div>  : null\r\n\r\n                        \r\n                    }  \r\n\r\n                        {\r\n                            org ?\r\n                           <OrgContainer org={org}/>\r\n                          : null\r\n                        }\r\n                       \r\n                     {\r\n                         location.lat ?\r\n                         <GoogleMap location={location} /> :\r\n                         null\r\n                     }   \r\n                 \r\n                    \r\n                   \r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default AnimalPage;"]},"metadata":{},"sourceType":"module"}